<%= form_with(model: [:dashboard, @validator], class: "space-y-6") do |f| %>
  <% if @validator.errors.any? %>
    <div class="bg-red-50 p-4 rounded-md">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(@validator.errors.count, "error") %> prohibited this validator from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc pl-5 space-y-1">
              <% @validator.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    <div>
      <%= f.label :name, class: "block text-sm font-medium text-gray-700" %>
      <%= f.text_field :name, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
    </div>

    <div>
      <%= f.label :email, class: "block text-sm font-medium text-gray-700" %>
      <%= f.email_field :email, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
    </div>

    <div>
      <%= f.label :phone, class: "block text-sm font-medium text-gray-700" %>
      <%= f.telephone_field :phone, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
    </div>

    <div>
      <%= f.label :event_id, "Event", class: "block text-sm font-medium text-gray-700" %>
      <%= f.collection_select :event_id, current_account.events, :id, :name, 
          { prompt: "Select an event" }, data: {controller: "slim-select" },
          class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500", id: "event_select" %>
    </div>



    <div>
      <%= f.label :ticket_type_ids, "Ticket Types", class: "block text-sm font-medium text-gray-700" %>
      <%= f.collection_select :ticket_type_ids, current_account.events, :id, :name, 
          { multiple: true}, data: {controller: "slim-select" },
          class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500", id: "ticket_type_id" %>
    </div>

  </div>


  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", dashboard_validators_path, 
        class: "px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
    <%= f.submit class: "px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
  </div>
<% end %> 
<script>
  document.addEventListener("DOMContentLoaded", function () {
    let eventSelect = document.getElementById('event_select');
    var select = new window.SlimSelect({ select: '#ticket_type_id' });

    if (!eventSelect){
      return;
    } 


    eventSelect.addEventListener('change', function () {
      let eventId = eventSelect.value;
      if (!eventId){
       console.log(select)
          select.setData([]);

        return;
      } 

      let url = `/dashboard/events/${eventId}/ticket_types`;

      fetch(url)
        .then(response => response.json())
        .then(data => {
          const options = data.map(item => {
            return { text: item.name, value: item.id };
          });

          select.setData(options);
        })
        .catch(error => {
          console.error("API load error:", error);
        });
    });
  });
</script>
